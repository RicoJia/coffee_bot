<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="diff_drive">
    <xacro:property name="diff_params" value="${load_yaml('$(find nuturtle_description)/config/diff_params.yaml')}" />

    <xacro:property name="grey_mat">
     <material name="arm_grey_mat">
       <color rgba="0.75 0.75 0.75 1.0" />
     </material>
    </xacro:property>

    <xacro:property name="yellow_mat">
     <material name="arm_yellow_mat">
       <color rgba="1 1 0 1.0" />
     </material>
    </xacro:property>

    <xacro:property name="pink_mat">
     <material name="arm_pink_mat">
       <color rgba="1.0 0.42 0.72 1.0" />
     </material>
    </xacro:property>

    <xacro:macro name="wheel" params="name color origin_xyz origin_rpy width radius">
     <link name="${name}">
     <collision>
         <origin xyz="${origin_xyz}" rpy="${origin_rpy}"/>
         <geometry>
            <cylinder length="${width}" radius="${radius}"/>
        </geometry>
     </collision>
       <visual>
         <origin xyz="${origin_xyz}" rpy="${origin_rpy}"/>
         <geometry>
             <cylinder length="${width}" radius="${radius}"/>
          </geometry>

          <xacro:if value="${color=='yellow'}">
            <xacro:insert_block name="yellow_mat"/>
          </xacro:if>
          <xacro:if value="${color=='grey'}">
            <xacro:insert_block name="grey_mat"/>
          </xacro:if>
       </visual>

       <inertial>
           <mass value="${diff_params['wheel_mass']}" />
           <inertia ixx="${diff_params['wheel_mass']*(3*diff_params['wheel_radius']*diff_params['wheel_radius']+diff_params['wheel_width']*diff_params['wheel_width'])/12}" ixy="0.0" ixz="0.0"
                iyy="${diff_params['wheel_mass']*(3*diff_params['wheel_radius']*diff_params['wheel_radius']+diff_params['wheel_width']*diff_params['wheel_width'])/12}" iyz="0.0"
                izz="${diff_params['wheel_mass']*(diff_params['wheel_width']*diff_params['wheel_width'])/2}" />
       </inertial>
     </link>
    </xacro:macro>

    <xacro:macro name="laser_scanner" params="name color origin_xyz origin_rpy width radius">
        <link name="${name}">
            <collision>
                <origin xyz="${origin_xyz}" rpy="${origin_rpy}"/>
                <geometry>
                    <cylinder length="${width}" radius="${radius}"/>
                </geometry>
            </collision>
            <visual>
                <origin xyz="${origin_xyz}" rpy="${origin_rpy}"/>
                <geometry>
                    <cylinder length="${width}" radius="${radius}"/>
                </geometry>

                <xacro:if value="${color=='yellow'}">
                    <xacro:insert_block name="yellow_mat"/>
                </xacro:if>
                <xacro:if value="${color=='grey'}">
                    <xacro:insert_block name="grey_mat"/>
                </xacro:if>
            </visual>

            <inertial>
                <mass value="0.0000001" />
                <inertia ixx="0.00000001" ixy="0.0" ixz="0.0"
                         iyy="0.0000001" iyz="0.0"
                         izz="0.00000001" />
            </inertial>
        </link>
    </xacro:macro>

    <xacro:macro name="_joint" params="name type origin_xyz origin_rpy parent child axis">
        <joint name="${name}" type="${type}">
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <parent link="${parent}" />
        <child link="${child}" />
        <xacro:if value="${type=='continuous'}">
        <limit effort="100" velocity="100" />
        <axis xyz="${axis}"/>
        </xacro:if>
        </joint>
    </xacro:macro>

    <!--    link-->
    <link name="base_link">
        <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
         <geometry>
             <box size="0.00001 0.00001 0.00001"/>
          </geometry>
        </visual>
        <inertial>
           <mass value="0.0000001" />
           <inertia ixx="0.00000001" ixy="0.0" ixz="0.0"
                    iyy="0.0000001" iyz="0.0"
                    izz="0.00000001" />
       </inertial>
    </link>

    <xacro:_joint name="base_link_scan"
                  type="fixed"
                  origin_xyz = "0.0 0.0 ${diff_params['chassis_thickness'] + 1.5*diff_params['laser_scanner_height']}" origin_rpy="0.0 0.0 ${+pi/2.0}"
                  parent = "base_link"
                  child = "scan"
                  axis = "0 0 1"/>


    <xacro:laser_scanner name="scan"
                         color="yellow"
                         origin_xyz="0 0 ${-1*diff_params['laser_scanner_height']}" origin_rpy="0 0 0"
                         width="${diff_params['laser_scanner_height']}"
                         radius="${diff_params['laser_scanner_radius']}"/>
<!--    Dummy IMU Link-->
    <xacro:_joint name="base_link_base_footprint"
                  type="fixed"
                  origin_xyz ="0 0  ${diff_params['wheel_radius'] - diff_params['wheel_axle_offset']}" origin_rpy="0.0 0.0 0.0"
                  parent = "base_link"
                  child = "base_footprint"
                  axis = "1 0 0"/>

    <link name="base_footprint">
        <visual>
            <origin xyz="${-1.0 * (0.5*diff_params['chassis_length']-diff_params['wheel_radius']) } 0 ${0.5*diff_params['chassis_thickness']}" rpy="0 0 0"/>
            <geometry>
                <box size="0.0001 0.0001 0.0001"/>
            </geometry>
            <xacro:insert_block name="pink_mat"/>
        </visual>

        <collision>
            <origin xyz="${-1.0 * (0.5*diff_params['chassis_length']-diff_params['wheel_radius']) } 0 ${0.5*diff_params['chassis_thickness']}" rpy="0 0 0"/>
            <geometry>
                <box size="0.0001 0.0001 0.0001"/>
            </geometry>
        </collision>

        <inertial>
            <mass value="0.01" />
            <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                     iyy="0.0001" iyz = "0.0"
                     izz="0.0001" />
        </inertial>
    </link>


    <xacro:_joint name="base_link_chassis"
                  type="fixed"
                  origin_xyz ="0 0  ${diff_params['wheel_radius'] - diff_params['wheel_axle_offset']}" origin_rpy="0.0 0.0 0.0"
                  parent = "base_link"
                  child = "chassis"
                  axis = "1 0 0"/>

    <link name="chassis">

        <visual>
             <origin xyz="${-1.0 * (0.5*diff_params['chassis_length']-diff_params['wheel_radius']) } 0 ${0.5*diff_params['chassis_thickness']}" rpy="0 0 0"/>
         <geometry>
             <box size="${diff_params['chassis_length']} ${diff_params['wheel_base']-diff_params['wheel_width']} ${diff_params['chassis_thickness']}"/>
          </geometry>
            <xacro:insert_block name="pink_mat"/>
        </visual>

        <collision>
            <origin xyz="${-1.0 * (0.5*diff_params['chassis_length']-diff_params['wheel_radius']) } 0 ${0.5*diff_params['chassis_thickness']}" rpy="0 0 0"/>
            <geometry>
                <box size="${diff_params['chassis_length']} ${diff_params['wheel_base']-diff_params['wheel_width']} ${diff_params['chassis_thickness']}"/>
            </geometry>
        </collision>

         <inertial>
                <mass value="${diff_params['chassis_mass']}" />
                <inertia ixx="${diff_params['chassis_mass']*((diff_params['wheel_base']-diff_params['wheel_width'])*(diff_params['wheel_base']-diff_params['wheel_width'])+diff_params['chassis_thickness']*diff_params['chassis_thickness'])/12}" ixy="0.0" ixz="0.0"
                    iyy="${diff_params['chassis_mass']*(diff_params['chassis_length']*diff_params['chassis_length']+diff_params['chassis_thickness']*diff_params['chassis_thickness'])/12}" iyz="0.0"
                    izz="${diff_params['chassis_mass']*((diff_params['wheel_base']-diff_params['wheel_width'])*(diff_params['wheel_base']-diff_params['wheel_width'])+diff_params['chassis_length']*diff_params['chassis_length'])/2}" />
          </inertial>

    </link>


    <xacro:_joint name="left_wheel_axle"
           type="fixed"
           origin_xyz = "0.0 ${0.5*diff_params['wheel_base']} ${diff_params['wheel_axle_offset']}" origin_rpy="0 0 0"
           parent = "chassis"
           child = "left_wheel"
           axis = "0 1 0"/>

    <xacro:wheel name="left_wheel"
             color="grey"
             origin_xyz="0 0 0" origin_rpy="${+pi/2.0} 0 0"
             width="${diff_params['wheel_width']}"
             radius="${diff_params['wheel_radius']}"/>

    <xacro:_joint name="right_wheel_axle"
        type="fixed"
        origin_xyz = "0.0 ${-0.5*diff_params['wheel_base']} ${diff_params['wheel_axle_offset']}" origin_rpy="0 0 0"
        parent = "chassis"
        child = "right_wheel"
        axis = "0 1 0"/>

    <xacro:wheel name="right_wheel"
             color="grey"
             origin_xyz="0 0 0" origin_rpy="${+pi/2.0} 0 0"
             width="${diff_params['wheel_width']}"
             radius="${diff_params['wheel_radius']}"/>

    <xacro:_joint name="chassis_ball_caster"
      type="fixed"
      origin_xyz = "${ -1 * (diff_params['chassis_length']-1.5*diff_params['wheel_radius'])} 0.0 ${(diff_params['wheel_radius']- diff_params['wheel_axle_offset'])*-0.5}" origin_rpy="0.0 0.0 0.0"
      parent = "chassis"
      child = "ball_caster"
      axis = "0 1 0"/>

      <link name="ball_caster">

        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
              <sphere radius="${(diff_params['wheel_radius']- diff_params['wheel_axle_offset'])*0.5}"/>
           </geometry>
             <xacro:insert_block name="pink_mat"/>
        </visual>

          <collision>
              <origin xyz="0 0 0" rpy="0 0 0"/>
              <geometry>
                <sphere radius="${(diff_params['wheel_radius']- diff_params['wheel_axle_offset'])*0.5}"/>
              </geometry>
          </collision>

          <inertial>
              <mass value="${100 * diff_params['wheel_mass']}" />
              <inertia ixx="${diff_params['chassis_mass']*((diff_params['wheel_base']-diff_params['wheel_width'])*(diff_params['wheel_base']-diff_params['wheel_width'])+diff_params['chassis_thickness']*diff_params['chassis_thickness'])/12}" ixy="0.0" ixz="0.0"
                       iyy="${diff_params['chassis_mass']*(diff_params['chassis_length']*diff_params['chassis_length']+diff_params['chassis_thickness']*diff_params['chassis_thickness'])/12}" iyz="0.0"
                       izz="${diff_params['chassis_mass']*((diff_params['wheel_base']-diff_params['wheel_width'])*(diff_params['wheel_base']-diff_params['wheel_width'])+diff_params['chassis_length']*diff_params['chassis_length'])/2}" />

          </inertial>

      </link>


</robot>

